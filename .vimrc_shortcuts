
""""" PRIMARY

""" Formating
" https://vim.fandom.com/wiki/Shifting_blocks_visually
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

""" Navigation
nnoremap <leader>? :help <C-R><C-W>|                       " Provide help

nnoremap <leader><leader> :b#<CR>|                         " Buffers: Toggle current buffer with last opened one

nnoremap <leader>ff :Files<CR>|                            " Fuzzy finder: Files
nnoremap <leader>fb :Buffers<CR>|                          " Fuzzy finder: Buffers
nnoremap <leader>fl :BLines<CR>|                           " Fuzzy finder: Buffer Lines
nnoremap <leader>ft :BTags<CR>|                            " Fuzzy finder: Buffer Tags
nnoremap <leader>fd :DirFiles<CR>|                         " Fuzzy finder: Files relative to current file directory
nnoremap <leader>fh :History<CR>|                          " Fuzzy finder: History
nnoremap <leader>fm :Marks<CR>|                            " Fuzzy finder: Marks
nnoremap <leader>fgg :GFiles?|                             " Git: Changed files
nnoremap <leader>fgf :GFiles!?|                            " Git: Changed files (Fullscreen)

nnoremap <leader>qq :q<CR>|                                " Exit: close current
nnoremap <leader>qa :qa<CR>|                               " Exit: close all

nnoremap <C-t> :Vexplore<CR>|                              " File tree (Bundled): Current

""" Search
nnoremap ,sa :Ag <C-R><C-W>|                        " Search (FZF): word under cursor
nnoremap ,st :Tags <C-R><C-W>|                      " Search (FZF): CTags
nnoremap ,ss :Snippets<CR>|                         " Search (FZF): Snippets (UltiSnips)
nnoremap ,sm :Maps<CR>|                             " Search (FZF): Maps
nnoremap ,sc :Commands<CR>|                         " Search (FZF): Commands

""" Replace
nnoremap ,rr :%s///g<left><left><left>|             " Replace: will put cursor in position to add search criteria
nnoremap ,rw :%s/<C-R><C-W>//g<left><left>|         " Replace: word under cursor (will put cursor in position to add replacement)
nnoremap ,re :%s/\<<C-R><C-W>\>//g<left><left>|     " Replace: word under cursor (will put cursor in position to add replacement)

""" Metadata
command! PathFull let @+ = expand("%:p")                       " Full path
nnoremap ,mm :PathFull<CR>|

command! PathRel let @+ = expand("%")                          " Relative path
nnoremap ,mr :PathRel<CR>|

command! PathFilename let @+ = expand("%:t")                   " Just filename
nnoremap ,mn :PathFilename<CR>|

command! PathDir let @+ = expand('%:p:h')                      " Just dir of file
nnoremap ,md :PathDir<CR>|

""" Date/Time
nnoremap <leader>id "=strftime('%Y-%m-%d (%a)')<C-M>pa|       " Date
nnoremap <leader>it "=strftime('%T (%Z)')<C-M>pa|             " Time

""" Misc
nnoremap <leader>$ :set list!<CR>                          " Toggle hidden characters
nnoremap <leader>z :ZoomToggle<CR>                         " Toggle zoom to current window split
command! MarksReset delm! | delm A-Z0-9                       " Delete all marks

"""
" CoC - Based on its defaults
" Source: https://github.com/neoclide/coc.nvim#example-vim-configuration
"""

inoremap <silent><expr> <TAB>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()

inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"

inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

inoremap <silent><expr> <c-space> coc#refresh()

nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)

nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

nnoremap <silent> K :call ShowDocumentation()<CR>

nmap <leader>rn <Plug>(coc-rename)

nmap <leader>aa  <Plug>(coc-codeaction-cursor)
xmap <leader>as  <Plug>(coc-codeaction-selected)
nmap <leader>as  <Plug>(coc-codeaction-selected)
nmap <leader>ab  <Plug>(coc-codeaction-source)
nmap <leader>aq  <Plug>(coc-fix-current)

nmap <silent> <leader>re <Plug>(coc-codeaction-refactor)
xmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)
nmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)

nmap <leader>ac  <Plug>(coc-codelens-action)

xmap if <Plug>(coc-funcobj-i)
omap if <Plug>(coc-funcobj-i)
xmap af <Plug>(coc-funcobj-a)
omap af <Plug>(coc-funcobj-a)
xmap ic <Plug>(coc-classobj-i)
omap ic <Plug>(coc-classobj-i)
xmap ac <Plug>(coc-classobj-a)
omap ac <Plug>(coc-classobj-a)

nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(1)\<cr>" : "\<Right>"
inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(0)\<cr>" : "\<Left>"
vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"

nmap <silent> <C-s> <Plug>(coc-range-select)
xmap <silent> <C-s> <Plug>(coc-range-select)

nnoremap <silent><nowait> <space>d  :<C-u>CocList diagnostics<cr>
nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>
nnoremap <silent><nowait> <space>c  :<C-u>CocList commands<cr>
nnoremap <silent><nowait> <space>s  :<C-u>CocList outline<cr>
nnoremap <silent><nowait> <space>o  :<C-u>CocOutline<cr>
nnoremap <silent><nowait> <space>j  :<C-u>CocNext<CR>
nnoremap <silent><nowait> <space>k  :<C-u>CocPrev<CR>
nnoremap <silent><nowait> <space>l  :<C-u>CocListResume<CR>

