### Common
alias a="alias"
alias psa="ps aux"
alias e=$EDITOR
alias ip='ifconfig | grep "inet " | grep -v 127.0.0.1 | grep -v 169 | cut -d\  -f2'
alias m="more"
alias dot="cd ~/Workspace/github/yuriteixeira/dotfiles"
alias pdot="cd ~/Workspace/ghe/yuriteixeira/dotfiles"
alias ag="ag --hidden"
alias sed="gsed"

# Open profile with editor
alias pf="nvim -p \
~/.zshrc \
~/.config/nvim/init.vim \
~/.tmux.conf \
"

alias rpf="source ~/.zshrc"

# Hosts
alias hosts="sudo $EDITOR /etc/hosts"

# Important directories (aliases and working directories)
alias ws="cd $PROJECTS_HOME"

### Package managers

# Brew
alias b="brew"
alias bi="brew install"
alias bic="brew install --cask"

# Yarn
alias y='yarn'
alias yi='yarn install'
alias yg='yarn global'
alias ys='yarn start'
alias yt='yarn test'
alias yj='yarn jest'
alias yji='yarn jest-integration'
alias yje='yarn jest-e2e'
alias yl='yarn lint'
alias yco='yarn commit'
alias yb='yarn build'
alias yc='yarn clean'

# PNPM
alias p='pnpm'

alias pss='pnpm start' # To avoid conflicts with ps (process listing)
alias pi='pnpm install'
alias pt='pnpm test'
alias pl='pnpm lint'
alias pco='pnpm commit'
alias pb='pnpm build'
alias pc='pnpm clean'

# Python / Pip
alias pip2deps='python2 -m pipdeptree | grep -v "\s -"'
alias pip3deps='python3 -m pipdeptree | grep -v "\s -"'

alias pip2upgrade='pip2 freeze | cut -d = -f 1 | xargs -n1 pip2 install -U'
alias pip3upgrade='pip3 freeze | cut -d = -f 1 | xargs -n1 pip3 install -U'


### Docker, Kubernetes and Google Cloud Platform
alias d=docker
alias di='docker images'
alias dc="docker-compose"
alias k="kubectl"
alias gc="gcloud"

function drl {
    registry=$1
    image=$2
    curl -L http://${registry}/${image}/tags/list | jq
}

### Tooling upgrade
function upgrade {
  echo ""
  echo ">>> Brew / Brew Cask"
  brew update
  brew upgrade
  brew outdated --cask | xargs -n1 brew reinstall --cask
  brew cleanup

  echo ""
  echo ">>> Yarn (Global)"
  yarn global upgrade

  echo ""
  echo ">>> Tmux Plugins"
  ~/.tmux/plugins/tpm/bin/update_plugins all

  echo ""
  echo ">>> Docker cleanup"
  docker system prune -f

  echo ""
  echo ">>> Google Cloud CLI"
  yes | gcloud components update

  echo ""
  echo ">>> Other updates"
  git -C ~/.config/base16-fzf pull
  git -C ~/.config/base16-shell pull

  echo ""
  echo "Oh-my-zsh"
  omz update
}

# Touch + Creates dir path (if needed)
function to {
  [ -z "$1" ] && echo "ERROR: Path, pls..." && return 1
  local filepath=$1
  local dirpath=$(dirname $filepath)
  [ ! -d "$dirpath" ] && mkdir -p $dirpath
  touch $filepath
  echo ">>> File $filepath created!"
}


### FZF

# Search + Edit (ag/fzf/e)
function age {
    CHOICE=$(ag --color $* | fzf -0 -1 --ansi)

    if [ -n "$CHOICE" ]
    then
        e -p $(echo "$CHOICE" | awk 'BEGIN { FS=":" } { printf "+%d %s\n", $2, $1 } ') 
    fi
}

# Search + Execute (ag/fzf)
function agx {
    CHOICE=$(ag --color $* | fzf -0 -1 --ansi)

    if [ -n "$CHOICE" ]
    then
        echo $CHOICE | cut -d ":" -f 1
    fi
}

### Watchers & Friends

# Watch file system changes
alias fw="fswatch -r -o -t -x -l 2"

# Notifications (OSX)
function notify {
    osascript -e "display notification \"${1}\" with title \"$([[ ! -z ${2} ]] && echo ${2} || echo "ATTENTION")\""
}

# Watch dir and exec command
function watch-n-do {
    [ -z "$1" ] || [ -z "$2" ] && echo "Usage: watch-n-do <path> <command>" && return 1

    echo ">>> Waiting for changes"
    echo "Path: $1"
    echo "Command: $2"
    echo ""

    bash -c $2

    fw $1 | while read; do bash -c $2; done
}


# JENV Activation
eval "$(jenv init -)"

